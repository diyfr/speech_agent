<grammar version="1.0" xml:lang="fr-FR" mode="voice" root="ruleCalendar"  tag-format="semantics/1.0" xmlns="http://www.w3.org/2001/06/grammar" xmlns:sapi="http://schemas.microsoft.com/Speech/2002/06/SRGSExtensions">
  <tag>
    <![CDATA[ 
    function IsValidDate(month, day, year) 
    {
      var oDate = new Date();
      var retVal = "true";
      
      if ((year < 1900) || (year > 2099))
      {
        retVal = "false";
      }
      
      oDate.setFullYear(year); 
      oDate.setDate(1);
      oDate.setMonth(month - 1);
      oDate.setDate(day);
      
      if (day != oDate.getDate())
        retVal = "false";
        
      return retVal;
    }
  
   function FutureYear(month, day) 
   {
      var thisDate = new Date();
      var thisMonth = thisDate.getMonth() + 1;
      var thisDay = thisDate.getDay() + 1;
      var thisYear = thisDate.getFullYear();
      
      thisYear = ((month > thisMonth) || (month == thisMonth && day >= thisDay)) ? thisYear : thisYear + 1;
      
      return thisYear;
    }
  
   function PastYear(month, day) 
   {
      var thisDate = new Date();
      var thisMonth = thisDate.getMonth() + 1;
      var thisDay = thisDate.getDay() + 1;
      var thisYear = thisDate.getFullYear();
      
      thisYear = ((month < thisMonth) || (month == thisMonth && day <= thisDay)) ? thisYear : thisYear - 1;
      
      return thisYear;
   }
  
   function FutureMonth(day) 
   {
      var thisDate = new Date();
      var thisMonth = thisDate.getMonth() + 1;
      
      thisMonth = (day < thisDate.getDate()) ? thisMonth + 1 : thisMonth;
      thisMonth = (thisMonth < 13) ? thisMonth : 1;
      
      return thisMonth;
   }

   function PastMonth(day) 
   {
      var thisDate = new Date();
      var thisMonth = thisDate.getMonth() + 1;
      
      thisMonth = (day > thisDate.getDate()) ? thisMonth - 1 : thisMonth;
      thisMonth = (thisMonth > 1) ? thisMonth : 12;
      
      return thisMonth;
   }
  
   function GetDateFromOffset(offset) {
      var thisDate = new Date();
      var newDate = new Date(thisDate.valueOf() + (offset * 60 * 60 * 24 * 1000) );
      return newDate;
   }
   
   function GetOffsetFromWeekday(weekday, weekOffset) 
   {
     var oToday=new Date();
     var todayOfWeek = oToday.getDay() + 1;
     if (weekOffset=="next") {
      if (weekday >= todayOfWeek) { 
        return (weekday - todayOfWeek); 
      }
      else { 
        return 7 - (todayOfWeek - weekday); 
       }
      } 
     else if (weekOffset=="previous") {
      if (weekday < todayOfWeek) { 
        return (weekday - todayOfWeek); 
      }
      else { 
        return ((weekday - todayOfWeek) - 7); 
      }
     } 
    else return 0;
  }

  function Hour24(hour, ampm) 
  {
    var retVal = hour;
    
    if ((hour > 12) || (hour < 0))
      return retVal;
      
    if (ampm == "AM")
    {
      if (hour == 12)
        retVal = 0;
    }
    else if (ampm == "PM")
    {
      if (hour < 12)
        retVal = hour + 12;
    }
    else
    {
      if (hour < 7)
        retVal = hour + 12;
    }
    
    return retVal;
  }
  
  function AlternateHour24(hour) 
  {
    var retVal = hour;
    
    if ((hour > 12) || (hour < 0))
      return retVal;
      
    if (hour == 12)
      retVal = 0;

    else if (hour > 6)
      retVal = hour + 12;
    
    return retVal;
  }
  ]]>
  </tag>

  <!-- ========================================== -->
  <!--  SARAH                                     -->
  <!-- ========================================== -->

  <rule id="ruleCalendar">
    <tag>out.action=new Object(); </tag>
    <item>Sarah</item>
    <one-of>
      <item>
        <ruleref uri="#ruleCheckEvent"/>
        <tag>out.action = rules.ruleCheckEvent;</tag>
      </item>
      <item>
        <ruleref uri="#ruleAddEvent"/>
        <tag>out.action = rules.ruleAddEvent;</tag>
      </item>
      <item>
        <ruleref uri="#ruleAddReminder"/>
        <tag>out.action = rules.ruleAddReminder;</tag>
      </item>
    </one-of>
    <tag>out.action._attributes.uri="http://127.0.0.1:8080/sarah/calendar";</tag>
  </rule>

  <rule id="ruleCheckEvent">
    <example>Sarah qu'est ce qui est prévu aujourd'hui ?</example>
    <tag>
      out.action=new Object();
      out.check="next";
    </tag>
    <one-of>
      <item>qu'est ce qui est prévu</item>
      <item>quelle est le planning</item>
      <item>est ce que j'ai des rendez-vous</item>
    </one-of>
    <item repeat="0-1">
	    <one-of>
	      <item>aujourd'hui <tag>out.check="today";</tag></item>
	      <item>demain <tag>out.check="tomorrow";</tag></item>
	    </one-of>
    </item>
  </rule>

  <rule id="ruleAddEvent">
    <example>Sarah ajoute un évènement: demain 17h26</example>
    <tag>out._attributes = {}</tag>
    <one-of>
      <item>crée un</item>
      <item>ajoute un</item>
    </one-of>
    <one-of>
      <item>
        rendez-vous <tag>out.title = "Rendez-Vous"</tag>
      </item>
      <item>
        rappel <tag>out.title = "Rappel"; out.duration = 30 </tag>
      </item>
      <item>
        évènement <ruleref special="GARBAGE" /> dans le calendrier <tag>out._attributes.dictation = "true"</tag>
      </item>
    </one-of>
    <item repeat="0-1">
      <ruleref uri="#Date" />
      <tag>out.date = rules.latest()</tag>
    </item>
    <item repeat="0-1">
      <ruleref uri="#Time" />
      <tag>out.time = rules.latest()</tag>
    </item>
  </rule>

  <rule id="ruleAddReminder">
    <example>Sarah préviens moi dans un quart d'heure</example>
    <tag>out._attributes = {}</tag>
    <one-of>
      <item>préviens moi</item>
      <item>rappel moi</item>
    </one-of>
    <ruleref special="GARBAGE" />
    <item>dans</item>
    <one-of>
      <item>
        <ruleref uri="#Time_Hour" />
        <tag>out.hour = rules.latest()</tag>
      </item>
      <item>
        <ruleref uri="#Time_Minute" />
        <tag>out.minute = rules.latest()</tag>
      </item>
    </one-of>
    <tag>out._attributes.dictation = "true"</tag>
    <tag>out.relativeTime = "true";</tag>
  </rule>

  <!-- ========================================== -->
  <!--  SARAH (end)                               -->
  <!-- ========================================== -->

  <!--    
  Category: Cardinal
  Description: Cardinal rules describe numeric values on the range of zero to 1 thousand. The numeric range is encoded in
    the rule name. For example, Cardinal_1_to_9 will contain numbers on the range of 1...9 (i.e. "un", "deux", ..., "trios").
    The <Cardinal> rule covers the full range.
    All return an integer _value semantic item.
  -->
  <!-- out.Cardinal: integer [0...1,000] -->
  <rule id="Cardinal" scope="public">
    <example> zéro </example>
    <item>
      <ruleref uri="#Cardinal_0_to_1000"/>
    </item>

  </rule>

  <!-- out.Cardinal_0: integer -->
  <rule id="Cardinal_0" scope="public">
    <example> zéro </example>
    <item> zéro </item>
    <tag> out = 0; </tag>
  </rule>

  <!-- out.Cardinal_0_to_1000: integer -->
  <rule id="Cardinal_0_to_1000" scope="public">
    <example> zéro </example>
    <example> trois </example>
    <one-of>
      <item>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_0" />
          </item>
          <item>
            <ruleref uri="#Cardinal_1_to_999" />
          </item>
        </one-of>
      </item>
      <item>
        mille <tag> out = 1000 ; </tag>
      </item>
    </one-of>
  </rule>


  <!--  out.Cardinal_0_to_100: integer -->
  <rule id="Cardinal_0_to_100" scope="public">
    <example> trois </example>
    <example> dix-sept </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0" />
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
      </item>
      <item>
        cent
        <tag> out = 100 ; </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_1_to_99: integer -->
  <rule id="Cardinal_1_to_99" scope="public">
    <example> trois </example>
    <example> dix-sept </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_1_to_9" />
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_99" />
      </item>
    </one-of>
  </rule>


  <!-- out.Cardinal_0_to_10: integer -->
  <rule id="Cardinal_0_to_10" scope="public">
    <example> zéro </example>
    <example> trois </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
      </item>
      <item>
        dix <tag> out = 10; </tag>
      </item>
    </one-of>
  </rule>



  <!-- out.Cardinal_2_to_9: integer -->
  <rule id="Cardinal_2_to_9" scope="public">
    <example> trois </example>
    <one-of>
      <item>
        deux <tag> out = 2; </tag>
      </item>
      <item>
        trois <tag> out = 3; </tag>
      </item>
      <item>
        quatre <tag> out = 4; </tag>
      </item>
      <item>
        cinq <tag> out = 5; </tag>
      </item>
      <item>
        six <tag> out = 6; </tag>
      </item>
      <item>
        sept <tag> out = 7; </tag>
      </item>
      <item>
        huit <tag> out = 8; </tag>
      </item>
      <item>
        neuf <tag> out = 9; </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_10_to_19: integer -->
  <rule id="Cardinal_10_to_19" scope="public">
    <example> dix-sept </example>
    <one-of>
      <item>
        dix <tag> out = 10; </tag>
      </item>
      <item>
        onze <tag> out = 11; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_12_to_19" />
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_12_to_19: integer -->
  <rule id="Cardinal_12_to_19" scope="public">
    <example> dix-sept </example>
    <one-of>
      <item>
        douze <tag> out = 12; </tag>
      </item>
      <item>
        treize <tag> out = 13; </tag>
      </item>
      <item>
        quatorze <tag> out = 14; </tag>
      </item>
      <item>
        quinze <tag> out = 15; </tag>
      </item>
      <item>
        seize <tag> out = 16; </tag>
      </item>
      <item>
        dix-sept <tag> out = 17; </tag>
      </item>
      <item>
        dix-huit <tag> out = 18; </tag>
      </item>
      <item>
        dix-neuf <tag> out = 19; </tag>
      </item>
    </one-of>
  </rule>


  <!-- out.Cardinal_60_to_69: integer -->
  <rule id="Cardinal_60_to_69" scope="public">
    <example> soixante </example>
    <example> soixante et un </example>
    <one-of>
      <item>
        soixante <tag>out = 60 </tag>
      </item>
      <item>
        soixante et un <tag>out = 61 </tag>
      </item>
      <item>
        soixante-deux <tag>out = 62 </tag>
      </item>
      <item>
        soixante-trois <tag>out = 63 </tag>
      </item>
      <item>
        soixante-quatre <tag>out = 64 </tag>
      </item>
      <item>
        soixante-cinq <tag>out = 65 </tag>
      </item>
      <item>
        soixante-six <tag>out = 66 </tag>
      </item>
      <item>
        soixante-sept <tag>out = 67 </tag>
      </item>
      <item>
        soixante-huit <tag>out = 68 </tag>
      </item>
      <item>
        soixante-neuf <tag>out = 69 </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Cardinal_70_to_79: integer -->
  <rule id="Cardinal_70_to_79" scope="public">
    <example> soixante-dix </example>
    <example> soixante-treize </example>
    <one-of>
      <item>
        soixante-dix <tag>out = 70 </tag>
      </item>
      <item>
        soixante et onze <tag>out = 71 </tag>
      </item>
      <item>
        soixante-douze <tag>out = 72 </tag>
      </item>
      <item>
        soixante-treize <tag>out = 73 </tag>
      </item>
      <item>
        soixante-quatorze <tag>out = 74 </tag>
      </item>
      <item>
        soixante-quinze <tag>out = 75 </tag>
      </item>
      <item>
        soixante-seize <tag>out = 76 </tag>
      </item>
      <item>
        soixante-dix-sept <tag>out = 77 </tag>
      </item>
      <item>
        soixante-dix-huit <tag>out = 78 </tag>
      </item>
      <item>
        soixante-dix-neuf <tag>out = 79 </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Cardinal_80_to_89: integer -->
  <rule id="Cardinal_80_to_89" scope="public">
    <example> quatre-vingt-deux  </example>
    <example> quatre-vingt-quatre  </example>
    <one-of>
      <item>
        quatre-vingt <tag>out = 80 </tag>
      </item>
      <item>
        quatre-vingt-un <tag>out = 81 </tag>
      </item>
      <item>
        quatre-vingt-deux <tag>out = 82 </tag>
      </item>
      <item>
        quatre-vingt-trois <tag>out = 83 </tag>
      </item>
      <item>
        quatre-vingt-quatre <tag>out = 84 </tag>
      </item>
      <item>
        quatre-vingt-cinq <tag>out = 85 </tag>
      </item>
      <item>
        quatre-vingt-six <tag>out = 86 </tag>
      </item>
      <item>
        quatre-vingt-sept <tag>out = 87 </tag>
      </item>
      <item>
        quatre-vingt-huit <tag>out = 88 </tag>
      </item>
      <item>
        quatre-vingt-neuf <tag>out = 89 </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Cardinal_90_to_99: integer -->
  <rule id="Cardinal_90_to_99" scope="public">
    <example> quatre-vingt-treize  </example>
    <example> quatre-vingt-quatorze  </example>
    <one-of>
      <item>
        quatre-vingt-dix <tag>out = 90 </tag>
      </item>
      <item>
        quatre-vingt-onze <tag>out = 91 </tag>
      </item>
      <item>
        quatre-vingt-douze <tag>out = 92 </tag>
      </item>
      <item>
        quatre-vingt-treize <tag>out = 93 </tag>
      </item>
      <item>
        quatre-vingt-quatorze <tag>out = 94 </tag>
      </item>
      <item>
        quatre-vingt-quinze <tag>out = 95 </tag>
      </item>
      <item>
        quatre-vingt-seize <tag>out = 96 </tag>
      </item>
      <item>
        quatre-vingt-dix-sept <tag>out = 97 </tag>
      </item>
      <item>
        quatre-vingt-dix-huit <tag>out = 98 </tag>
      </item>
      <item>
        quatre-vingt-dix-neuf <tag>out = 99 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_2_to_31 : integer -->
  <rule id="Cardinal_2_to_31" scope="public">
    <example> cinq </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_19" />
      </item>
      <item>
        <ruleref uri="#Cardinal_20_to_29" />
      </item>
      <item>
        trente <tag> out = 30 ; </tag>
      </item>
      <item>
        trente et un <tag> out = 31 ; </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_1_to_999: integer -->
  <rule id="Cardinal_1_to_999" scope="public">
    <example> trois </example>
    <example> dix-sept </example>
    <example> cent </example>
    <example> trois cent dix-sept </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
      </item>
      <item>
        <ruleref uri="#Cardinal_100_to_999" />
      </item>
    </one-of>

  </rule>

  <!-- out.Cardinal_100_to_999: integer -->
  <rule id="Cardinal_100_to_999" scope="public">
    <example> trois cent soixante  </example>
    <example> quatre cent cinquante-six  </example>
    <tag>out = 100 </tag>
    <one-of>
      <item>
        cent
      </item>
      <item>
        cent
        <ruleref uri="#Cardinal_1_to_99" />
        <tag>out += rules.Cardinal_1_to_99 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
        cents
        <tag>out = out * rules.Cardinal_2_to_9 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
        cent
        <tag>out = out * rules.Cardinal_2_to_9 </tag><ruleref uri="#Cardinal_1_to_99" /><tag>out += rules.Cardinal_1_to_99 </tag>
      </item>
    </one-of>
  </rule>

  <!-- ======== -->
  <!-- Ordinals -->
  <!-- ======== -->
  <!-- out.Ordinal: integer -->
  <rule id="Ordinal" scope="public">
    <example> cinquième  </example>
    <example> quatrième </example>
    <one-of>
      <item>
        <ruleref uri="#Ordinal_male" />
      </item>
      <item>
        <ruleref uri="#Ordinal_female" />
      </item>
    </one-of>
  </rule>

  <!-- out.Ordinal_male: integer -->
  <rule id="Ordinal_male" scope="public">
    <example> trente et unième  </example>
    <example> trentième  </example>
    <item>
      <ruleref uri="#Ordinal_1_to_31_male" />
    </item>
  </rule>

  <!-- out.Ordinal_female: integer -->
  <rule id="Ordinal_female" scope="public">
    <example> trentième  </example>
    <example> trente et unième  </example>
    <item>
      <ruleref uri="#Ordinal_1_to_31_female" />
    </item>
  </rule>

  <!-- out.Ordinal_1_to_9_male: integer -->
  <rule id="Ordinal_1_to_9_male" scope="public">
    <example> second  </example>
    <example> troisième  </example>
    <example> quatrième  </example>
    <one-of>
      <item>
        premier <tag> out = 1 </tag>
      </item>
      <item>
        deuxième <tag> out = 2 </tag>
      </item>
      <item>
        second <tag> out = 2 </tag>
      </item>
      <item>
        troisième <tag> out = 3 </tag>
      </item>
      <item>
        quatrième <tag> out = 4 </tag>
      </item>
      <item>
        cinquième <tag> out = 5 </tag>
      </item>
      <item>
        sixième <tag> out = 6 </tag>
      </item>
      <item>
        septième <tag> out = 7 </tag>
      </item>
      <item>
        huitième <tag> out = 8 </tag>
      </item>
      <item>
        neuvième <tag> out = 9 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Ordinal_1_to_9_female: integer -->
  <rule id="Ordinal_1_to_9_female" scope="public">
    <example> huitième  </example>
    <example> neuvième  </example>
    <example> première  </example>
    <one-of>
      <item>
        première <tag> out = 1 </tag>
      </item>
      <item>
        deuxième <tag> out = 2 </tag>
      </item>
      <item>
        seconde <tag> out = 2 </tag>
      </item>
      <item>
        troisième <tag> out = 3 </tag>
      </item>
      <item>
        quatrième <tag> out = 4 </tag>
      </item>
      <item>
        cinquième <tag> out = 5 </tag>
      </item>
      <item>
        sixième <tag> out = 6 </tag>
      </item>
      <item>
        septième <tag> out = 7 </tag>
      </item>
      <item>
        huitième <tag> out = 8 </tag>
      </item>
      <item>
        neuvième <tag> out = 9 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Ordinal_2_to_9_combined: integer -->
  <rule id="Ordinal_2_to_9_combined" scope="public">
    <example> cinquième  </example>
    <example> sixième  </example>
    <example> septième  </example>
    <one-of>
      <item>
        deuxième <tag> out = 2 </tag>
      </item>
      <item>
        troisième <tag> out = 3 </tag>
      </item>
      <item>
        quatrième <tag> out = 4 </tag>
      </item>
      <item>
        cinquième <tag> out = 5 </tag>
      </item>
      <item>
        sixième <tag> out = 6 </tag>
      </item>
      <item>
        septième <tag> out = 7 </tag>
      </item>
      <item>
        huitième <tag> out = 8 </tag>
      </item>
      <item>
        neuvième <tag> out = 9 </tag>
      </item>
    </one-of>
  </rule>


  <!-- out.Ordinal_1_to_31_male: integer -->
  <rule id="Ordinal_1_to_31_male" scope="public">
    <example> trente et unième  </example>
    <example> trentième  </example>
    <one-of>
      <item>
        <ruleref uri="#Ordinal_1_to_9_male" />
      </item>
      <item>
        <ruleref uri="#Ordinal_10_to_19" />
      </item>
      <item>
        <ruleref uri="#Ordinal_20_to_29" />
      </item>
      <item>
        trentième <tag> out = 30 </tag>
      </item>
      <item>
        trente et unième <tag> out = 31 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Ordinal_1_to_31_female: integer -->
  <rule id="Ordinal_1_to_31_female" scope="public">
    <example> trentième  </example>
    <example> trente et unième  </example>
    <one-of>
      <item>
        <ruleref uri="#Ordinal_1_to_9_female" />
      </item>
      <item>
        <ruleref uri="#Ordinal_10_to_19" />
      </item>
      <item>
        <ruleref uri="#Ordinal_20_to_29" />
      </item>
      <item>
        trentième <tag> out = 30 </tag>
      </item>
      <item>
        trente et unième <tag> out = 31 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Ordinal_10_to_19: integer -->
  <rule id="Ordinal_10_to_19" scope="public">
    <example> douzième  </example>
    <example> treizième  </example>
    <example> quatorzième  </example>
    <one-of>
      <item>
        dixième <tag> out = 10 </tag>
      </item>
      <item>
        onzième <tag> out = 11 </tag>
      </item>
      <item>
        douzième <tag> out = 12 </tag>
      </item>
      <item>
        treizième <tag> out = 13 </tag>
      </item>
      <item>
        quatorzième <tag> out = 14 </tag>
      </item>
      <item>
        quinzième <tag> out = 15 </tag>
      </item>
      <item>
        seizième <tag> out = 16 </tag>
      </item>
      <item>
        dix-septième <tag> out = 17 </tag>
      </item>
      <item>
        dix-huitième <tag> out = 18 </tag>
      </item>
      <item>
        dix-neuvième <tag> out = 19 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Ordinal_20_to_29: integer -->
  <rule id="Ordinal_20_to_29" scope="public">
    <example> vingt-deuxième  </example>
    <example> vingt-septième  </example>
    <one-of>
      <item>
        vingtième <tag> out = 20 </tag>
      </item>
      <item>
        vingt et unième <tag> out = 21 </tag>
      </item>
      <item>
        vingt-deuxième <tag> out = 22 </tag>
      </item>
      <item>
        vingt-troisième <tag> out = 23 </tag>
      </item>
      <item>
        vingt-quatrième <tag> out = 24 </tag>
      </item>
      <item>
        vingt-cinquième <tag> out = 25 </tag>
      </item>
      <item>
        vingt-sixième <tag> out = 26 </tag>
      </item>
      <item>
        vingt-septième <tag> out = 27 </tag>
      </item>
      <item>
        vingt-huitième <tag> out = 28 </tag>
      </item>
      <item>
        vingt-neuvième <tag> out = 29 </tag>
      </item>
    </one-of>
  </rule>

  <!--Digits-->

  <rule id="Digits" scope="public">
    <example> sept trois </example>
    <example> trente-six </example>
    <example> vingt-cinq neuf </example>
    <example> zéro zéro sept </example>
    <example> zéro cinq </example>
    <example> soixante-six soixante-dix-sept </example>
    <example> zéro un vingt-trois </example>
    <tag>out._value = ""; </tag>
    <one-of>
      <item>
        <ruleref uri="#DigitBlock_2Digits" />
        <tag>out._value += rules.DigitBlock_2Digits._value;</tag>
      </item>
      <item>
        <ruleref uri="#DigitBlock_3Digits" />
        <tag>out._value += rules.DigitBlock_3Digits._value;</tag>
      </item>
      <item>
        <ruleref uri="#DigitBlock_4Digits" />
        <tag>out._value += rules.DigitBlock_4Digits._value;</tag>
      </item>
    </one-of>
  </rule>

  <rule id="Cardinal_1_MF" scope="public">
    <one-of>
      <item> un </item>
      <item> une </item>
    </one-of>
  </rule>

  <rule id="PHONE_TAG_Cardinal_1_MF" scope="public">
    <one-of>
      <item> un </item>
    </one-of>
  </rule>

  <!-- DO NOT EDIT (expanded from "expand_source_A.xml"): -->

  <!--
This code will be forked to two files which then will be macro-expanded into the main library file.
-->


  <rule id="DigitBlock_2Digits" scope="public">
    <example> sept trois </example>
    <example> trente-six </example>
    <tag>out._value = ""; </tag>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag>out._value += rules.Cardinal_10_to_99 </tag>
      </item>
    </one-of>
  </rule>

  <rule id="Cardinal_10_to_99" scope="public">
    <example> dix-sept </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_10_to_19" />
      </item>
      <item>
        <ruleref uri="#Cardinal_20_to_99" />
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_0_to_9: integer -->
  <rule id="Cardinal_0_to_9" scope="public">
    <example> deux </example>
    <example> trois </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0" />
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_9" />
      </item>
    </one-of>
  </rule>


  <!-- out.Cardinal_1_to_9: integer -->
  <rule id="Cardinal_1_to_9" scope="public">
    <example> trois </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_1_MF" />
        <tag> out = 1; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_20_to_99: integer -->
  <rule id="Cardinal_20_to_99" scope="public">
    <example> vingt </example>
    <example> quarante et un </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_20_to_29" />
      </item>
      <item>
        <ruleref uri="#Cardinal_30_to_39" />
      </item>
      <item>
        <ruleref uri="#Cardinal_40_to_49" />
      </item>
      <item>
        <ruleref uri="#Cardinal_50_to_59" />
      </item>
      <item>
        <ruleref uri="#Cardinal_60_to_69" />
      </item>
      <item>
        <ruleref uri="#Cardinal_70_to_79" />
      </item>
      <item>
        <ruleref uri="#Cardinal_80_to_89" />
      </item>
      <item>
        <ruleref uri="#Cardinal_90_to_99" />
      </item>
    </one-of>
  </rule>


  <!-- out.Cardinal_20_to_29: integer -->
  <rule id="Cardinal_20_to_29" scope="public">
    <example> vingt </example>
    <one-of>
      <item>
        vingt <tag>out = 20 </tag>
      </item>
      <item>
        vingt et <ruleref uri="#Cardinal_1_MF" />  <tag>out = 21 </tag>
      </item>
      <item>
        vingt-deux <tag>out = 22 </tag>
      </item>
      <item>
        vingt-trois <tag>out = 23 </tag>
      </item>
      <item>
        vingt-quatre <tag>out = 24 </tag>
      </item>
      <item>
        vingt-cinq <tag>out = 25 </tag>
      </item>
      <item>
        vingt-six <tag>out = 26 </tag>
      </item>
      <item>
        vingt-sept <tag>out = 27 </tag>
      </item>
      <item>
        vingt-huit <tag>out = 28 </tag>
      </item>
      <item>
        vingt-neuf <tag>out = 29 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_30_to_39: integer -->
  <rule id="Cardinal_30_to_39" scope="public">
    <example> trente </example>
    <example> trente-huit </example>
    <one-of>
      <item>
        trente <tag>out = 30 </tag>
      </item>
      <item>
        trente et <ruleref uri="#Cardinal_1_MF" />  <tag>out = 31 </tag>
      </item>
      <item>
        trente-deux <tag>out = 32 </tag>
      </item>
      <item>
        trente-trois <tag>out = 33 </tag>
      </item>
      <item>
        trente-quatre <tag>out = 34 </tag>
      </item>
      <item>
        trente-cinq <tag>out = 35 </tag>
      </item>
      <item>
        trente-six <tag>out = 36 </tag>
      </item>
      <item>
        trente-sept <tag>out = 37 </tag>
      </item>
      <item>
        trente-huit <tag>out = 38 </tag>
      </item>
      <item>
        trente-neuf <tag>out = 39 </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Cardinal_40_to_49: integer -->
  <rule id="Cardinal_40_to_49" scope="public">
    <example> quarante </example>
    <example> quarante-quatre </example>
    <one-of>
      <item>
        quarante <tag>out = 40 </tag>
      </item>
      <item>
        quarante et <ruleref uri="#Cardinal_1_MF" />  <tag>out = 41 </tag>
      </item>
      <item>
        quarante-deux <tag>out = 42 </tag>
      </item>
      <item>
        quarante-trois <tag>out = 43 </tag>
      </item>
      <item>
        quarante-quatre <tag>out = 44 </tag>
      </item>
      <item>
        quarante-cinq <tag>out = 45 </tag>
      </item>
      <item>
        quarante-six <tag>out = 46 </tag>
      </item>
      <item>
        quarante-sept <tag>out = 47 </tag>
      </item>
      <item>
        quarante-huit <tag>out = 48 </tag>
      </item>
      <item>
        quarante-neuf <tag>out = 49 </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Cardinal_50_to_59: integer -->
  <rule id="Cardinal_50_to_59" scope="public">
    <example> cinquante </example>
    <example> cinquante-deux </example>
    <one-of>
      <item>
        cinquante <tag>out = 50 </tag>
      </item>
      <item>
        cinquante et <ruleref uri="#Cardinal_1_MF" /> <tag>out = 51 </tag>
      </item>
      <item>
        cinquante-deux <tag>out = 52 </tag>
      </item>
      <item>
        cinquante-trois <tag>out = 53 </tag>
      </item>
      <item>
        cinquante-quatre <tag>out = 54 </tag>
      </item>
      <item>
        cinquante-cinq <tag>out = 55 </tag>
      </item>
      <item>
        cinquante-six <tag>out = 56 </tag>
      </item>
      <item>
        cinquante-sept <tag>out = 57 </tag>
      </item>
      <item>
        cinquante-huit <tag>out = 58 </tag>
      </item>
      <item>
        cinquante-neuf <tag>out = 59 </tag>
      </item>
    </one-of>
  </rule>
  <!-- END OF EXPANSION (expanded from "expand_source_A.xml"): -->
  <!-- DO NOT EDIT (expanded from "expand_source_Phone.xml"): -->

  <!--
This code will be forked to two files which then will be macro-expanded into the main library file.
-->


  <rule id="PHONE_TAG_DigitBlock_2Digits" scope="public">
    <example> sept trois </example>
    <example> trente-six </example>
    <tag>out._value = ""; </tag>
    <one-of>
      <item>
        <ruleref uri="#PHONE_TAG_Cardinal_0_to_9" />
        <tag>out._value += rules.PHONE_TAG_Cardinal_0_to_9 </tag>
        <ruleref uri="#PHONE_TAG_Cardinal_0_to_9" />
        <tag>out._value += rules.PHONE_TAG_Cardinal_0_to_9 </tag>
      </item>
      <item>
        <ruleref uri="#PHONE_TAG_Cardinal_10_to_99" />
        <tag>out._value += rules.PHONE_TAG_Cardinal_10_to_99 </tag>
      </item>
    </one-of>
  </rule>

  <rule id="PHONE_TAG_Cardinal_10_to_99" scope="public">
    <example> dix-sept </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_10_to_19" />
      </item>
      <item>
        <ruleref uri="#PHONE_TAG_Cardinal_20_to_99" />
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_0_to_9: integer -->
  <rule id="PHONE_TAG_Cardinal_0_to_9" scope="public">
    <example> deux </example>
    <example> trois </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0" />
      </item>
      <item>
        <ruleref uri="#PHONE_TAG_Cardinal_1_to_9" />
      </item>
    </one-of>
  </rule>


  <!-- out.Cardinal_1_to_9: integer -->
  <rule id="PHONE_TAG_Cardinal_1_to_9" scope="public">
    <example> trois </example>
    <one-of>
      <item>
        <ruleref uri="#PHONE_TAG_Cardinal_1_MF" />
        <tag> out = 1; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_20_to_99: integer -->
  <rule id="PHONE_TAG_Cardinal_20_to_99" scope="public">
    <example> vingt </example>
    <example> quarante et un </example>
    <one-of>
      <item>
        <ruleref uri="#PHONE_TAG_Cardinal_20_to_29" />
      </item>
      <item>
        <ruleref uri="#PHONE_TAG_Cardinal_30_to_39" />
      </item>
      <item>
        <ruleref uri="#PHONE_TAG_Cardinal_40_to_49" />
      </item>
      <item>
        <ruleref uri="#PHONE_TAG_Cardinal_50_to_59" />
      </item>
      <item>
        <ruleref uri="#Cardinal_60_to_69" />
      </item>
      <item>
        <ruleref uri="#Cardinal_70_to_79" />
      </item>
      <item>
        <ruleref uri="#Cardinal_80_to_89" />
      </item>
      <item>
        <ruleref uri="#Cardinal_90_to_99" />
      </item>
    </one-of>
  </rule>


  <!-- out.Cardinal_20_to_29: integer -->
  <rule id="PHONE_TAG_Cardinal_20_to_29" scope="public">
    <example> vingt </example>
    <one-of>
      <item>
        vingt <tag>out = 20 </tag>
      </item>
      <item>
        vingt et <ruleref uri="#PHONE_TAG_Cardinal_1_MF" />  <tag>out = 21 </tag>
      </item>
      <item>
        vingt-deux <tag>out = 22 </tag>
      </item>
      <item>
        vingt-trois <tag>out = 23 </tag>
      </item>
      <item>
        vingt-quatre <tag>out = 24 </tag>
      </item>
      <item>
        vingt-cinq <tag>out = 25 </tag>
      </item>
      <item>
        vingt-six <tag>out = 26 </tag>
      </item>
      <item>
        vingt-sept <tag>out = 27 </tag>
      </item>
      <item>
        vingt-huit <tag>out = 28 </tag>
      </item>
      <item>
        vingt-neuf <tag>out = 29 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Cardinal_30_to_39: integer -->
  <rule id="PHONE_TAG_Cardinal_30_to_39" scope="public">
    <example> trente </example>
    <example> trente-huit </example>
    <one-of>
      <item>
        trente <tag>out = 30 </tag>
      </item>
      <item>
        trente et <ruleref uri="#PHONE_TAG_Cardinal_1_MF" />  <tag>out = 31 </tag>
      </item>
      <item>
        trente-deux <tag>out = 32 </tag>
      </item>
      <item>
        trente-trois <tag>out = 33 </tag>
      </item>
      <item>
        trente-quatre <tag>out = 34 </tag>
      </item>
      <item>
        trente-cinq <tag>out = 35 </tag>
      </item>
      <item>
        trente-six <tag>out = 36 </tag>
      </item>
      <item>
        trente-sept <tag>out = 37 </tag>
      </item>
      <item>
        trente-huit <tag>out = 38 </tag>
      </item>
      <item>
        trente-neuf <tag>out = 39 </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Cardinal_40_to_49: integer -->
  <rule id="PHONE_TAG_Cardinal_40_to_49" scope="public">
    <example> quarante </example>
    <example> quarante-quatre </example>
    <one-of>
      <item>
        quarante <tag>out = 40 </tag>
      </item>
      <item>
        quarante et <ruleref uri="#PHONE_TAG_Cardinal_1_MF" />  <tag>out = 41 </tag>
      </item>
      <item>
        quarante-deux <tag>out = 42 </tag>
      </item>
      <item>
        quarante-trois <tag>out = 43 </tag>
      </item>
      <item>
        quarante-quatre <tag>out = 44 </tag>
      </item>
      <item>
        quarante-cinq <tag>out = 45 </tag>
      </item>
      <item>
        quarante-six <tag>out = 46 </tag>
      </item>
      <item>
        quarante-sept <tag>out = 47 </tag>
      </item>
      <item>
        quarante-huit <tag>out = 48 </tag>
      </item>
      <item>
        quarante-neuf <tag>out = 49 </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Cardinal_50_to_59: integer -->
  <rule id="PHONE_TAG_Cardinal_50_to_59" scope="public">
    <example> cinquante </example>
    <example> cinquante-deux </example>
    <one-of>
      <item>
        cinquante <tag>out = 50 </tag>
      </item>
      <item>
        cinquante et <ruleref uri="#PHONE_TAG_Cardinal_1_MF" /> <tag>out = 51 </tag>
      </item>
      <item>
        cinquante-deux <tag>out = 52 </tag>
      </item>
      <item>
        cinquante-trois <tag>out = 53 </tag>
      </item>
      <item>
        cinquante-quatre <tag>out = 54 </tag>
      </item>
      <item>
        cinquante-cinq <tag>out = 55 </tag>
      </item>
      <item>
        cinquante-six <tag>out = 56 </tag>
      </item>
      <item>
        cinquante-sept <tag>out = 57 </tag>
      </item>
      <item>
        cinquante-huit <tag>out = 58 </tag>
      </item>
      <item>
        cinquante-neuf <tag>out = 59 </tag>
      </item>
    </one-of>
  </rule>
  <!-- END OF EXPANSION (expanded from "expand_source_Phone.xml"): -->

  <rule id="DigitBlock_3Digits" scope="public">
    <example> un deux trois </example>
    <example> cent </example>
    <example> deux trente-trois </example>
    <example> vingt-cinq neuf </example>
    <tag>out._value = ""; </tag>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag>out._value += rules.Cardinal_10_to_99 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag>out._value += rules.Cardinal_10_to_99 </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_100_to_999" />
        <tag>out._value += rules.Cardinal_100_to_999 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.DigitBlock_4Digits._value: string -->
  <rule id="DigitBlock_4Digits" scope="public">
    <example> six cinq un deux </example>
    <example> huit mille </example>
    <example> soixante-six soixante-dix-sept </example>
    <example> zéro un vingt-trois </example>
    <example> vingt zéro cinq </example>
    <tag>out._value = ""; </tag>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag>out._value += rules.Cardinal_10_to_99 </tag>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag>out._value += rules.Cardinal_10_to_99 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag>out._value += rules.Cardinal_10_to_99 </tag>
        <ruleref uri="#Cardinal_0" />
        <tag>out._value += rules.Cardinal_0 </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_0" />
        <tag>out._value += rules.Cardinal_0 </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag>out._value += rules.Cardinal_0_to_9 </tag>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag>out._value += rules.Cardinal_10_to_99 </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_2_to_9" /> mille
        <tag>out._value += rules.Cardinal_2_to_9 + "000" </tag>
      </item>
      <item>
        mille
        <tag>out._value += "1000" </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_0" />
        <tag>out._value += rules.Cardinal_0 </tag>
        <ruleref uri="#Cardinal_100_to_999" />
        <tag>out._value += rules.Cardinal_100_to_999 </tag>
      </item>
    </one-of>
  </rule>

  <!--Date-->
  <rule id="Date" scope="public">
    <example> trois septembre deux mille trois </example>
    <example> le treize  </example>
    <example> le neuf </example>
    <example> deux mai </example>
    <example> dix dix deux mille six </example>
    <example> dix dix zéro six </example>
    <example> mercredi prochain </example>
    <example> demain </example>
    <example> trente et un avril deux mille cinq </example>
    <example> lundi </example>
    <one-of>
      <item>
        <ruleref uri="#Date_Day" />
      </item>
      <item>
        <ruleref uri="#Date_Day_Month" />
      </item>
      <item>
        <ruleref uri="#Date_Day_Month_Year" />
      </item>
      <item>
        <ruleref uri="#Date_DayNum_MonthNum" />
      </item>
      <item>
        <ruleref uri="#Date_DayNum_MonthNum_Year" />
      </item>
      <item>
        <ruleref uri="#Date_Relative" />
      </item>
    </one-of>
  </rule>

  <!--Date_Day-->

  <rule id="Date_Day" scope="public">
    <example> lundi le vingt  </example>
    <tag>
      out.Day = new Object();
      out.Month = new Object();
      out.Year = new Object();
      out.AlternateMonth = new Object();
      out.AlternateYear = new Object();
    </tag>
    <item repeat="0-1">
      <ruleref uri="#Date_Weekday" />
    </item>
    <item repeat="0-1">le</item>
    <one-of>
      <item>
        premier <tag> out.Day._value = 1; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_2_to_31" />
        <tag> out.Day._value = rules.Cardinal_2_to_31; </tag>
      </item>
    </one-of>
    <tag>
      out.Day._attributes.name = "Explicit";
      out.Month._value = FutureMonth(out.Day._value);
      out.Month._attributes.name = "Assumed";
      out.Year._value = FutureYear(out.Month._value, out.Day._value);
      out.Year._attributes.name = "Assumed";
      out.AlternateMonth._value = PastMonth(out.Day._value);
      out.AlternateYear._value = PastYear(out.AlternateMonth._value, out.Day._value);
      out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
    </tag>
  </rule>

  <!--Date_Day_Month-->
  <rule id="Date_Day_Month" scope="public">
    <example> six mai  </example>
    <example> vingt janvier  </example>
    <tag>
      out.Day = new Object();
      out.Month = new Object();
      out.Year = new Object();
      out.AlternateYear = new Object();
    </tag>
    <item>
      <ruleref uri="#Date_Day" />
      <tag>
        out.Day = rules.Date_Day.Day;
        out.Year = rules.Date_Day.Year;
      </tag>
      <ruleref uri="#Date_Month" />
      <tag>
        out.Month._value = rules.Date_Month;
        out.Month._attributes.name = "Explicit";
        out.AlternateYear = PastYear(out.Month._value, out.Day._value);
        out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
      </tag>
    </item>
  </rule>

  <!--Date_Day_Month_Year-->
  <rule id="Date_Day_Month_Year" scope="public">
    <example> trois janvier zéro neuf  </example>
    <example> trois janvier dix-neuf cent dix-neuf  </example>
    <tag>
      out.Day = new Object();
      out.Month = new Object();
      out.Year = new Object();
    </tag>
    <item>
      <ruleref uri="#Date_Day_Month" />
      <tag>
        out.Day = rules.Date_Day_Month.Day;
        out.Month = rules.Date_Day_Month.Month;
      </tag>
      <ruleref uri="#Date_Year" />
      <tag>
        out.Year = rules.Date_Year.Year;
        out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
      </tag>
    </item>
  </rule>

  <!--Date_DayNum_MonthNum-->
  <rule id="Date_DayNum_MonthNum" scope="public">
    <example> le deux trois  </example>
    <example> le six zéro neuf  </example>
    <tag>
      out.Day = new Object();
      out.Month = new Object();
      out.Year = new Object();
      out.AlternateYear = new Object();
    </tag>
    <item>
      <item repeat="0-1">le</item>
      <ruleref uri="#Date_DayNum" />
      <tag>
        var offset1 =  rules.Date_DayNum;
      </tag>
      <ruleref uri="#Date_MonthNum" />
      <tag>
        var offset2 = rules.Date_MonthNum;
      </tag>
    </item>
    <tag>
      out.Day._value = offset1;
      out.Day._attributes.name = "Explicit";
      out.Month._value = offset2;
      out.Month._attributes.name = "Explicit";
      out.Year._value = FutureYear(out.Month._value,out.Day._value);
      out.Year._attributes.name = "Assumed";
      out.AlternateYear._value = PastYear(out.Month._value, out.Day._value);
      out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
    </tag>
  </rule>

  <!--Date_DayNum_MonthNum_Year-->

  <rule id="Date_DayNum_MonthNum_Year" scope="public">
    <example> le un un onze  </example>
    <tag>
      out.Day = new Object();
      out.Month = new Object();
      out.Year = new Object();
    </tag>
    <item>
      <ruleref uri="#Date_DayNum_MonthNum" />
      <tag>
        out.Day = rules.Date_DayNum_MonthNum.Day;
        out.Month = rules.Date_DayNum_MonthNum.Month;
      </tag>
      <ruleref uri="#Date_Year" />
      <tag>
        out.Year = rules.Date_Year.Year;
        out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
      </tag>
    </item>
  </rule>

  <!--Date_Relative-->
  <rule id="Date_Relative" scope="public">
    <example> aujourd'hui </example>
    <example> hier </example>
    <one-of>
      <item>
        <ruleref uri="#Date_Relative_Special" />
      </item>
      <item>
        <ruleref uri="#Date_Relative_Weekday" />
      </item>
    </one-of>
  </rule>

  <!--Date_Relative_Special-->
  <rule id="Date_Relative_Special" scope="public">
    <example> demain </example>
    <example> aujourd'hui </example>
    <example> hier </example>
    <tag>
      out.Day = new Object();
      out.Month = new Object();
      out.Year = new Object();
      var oDate;
    </tag>
    <item>
      <one-of>
        <item>
          aujourd'hui <tag> oDate = GetDateFromOffset(0); </tag>
        </item>
        <item>
          demain <tag> oDate = GetDateFromOffset(1); </tag>
        </item>
        <item>
          hier <tag> oDate = GetDateFromOffset(-1); </tag>
        </item>
      </one-of>
      <tag>
        out.Day._value = oDate.getDate();
        out.Day._attributes.name = "Derived";
        out.Month._value = oDate.getMonth() + 1;
        out.Month._attributes.name = "Derived";
        out.Year._value = oDate.getFullYear();
        out.Year._attributes.name = "Derived";
        out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
      </tag>
    </item>
  </rule>

  <!--Date_Relative_Weekday-->
  <rule id="Date_Relative_Weekday" scope="public">
    <example>le lundi</example>
    <tag>
      out.Day = new Object();
      out.Month = new Object();
      out.Year = new Object();

      out.AlternateDay = new Object();
      out.AlternateMonth = new Object();
      out.AlternateYear = new Object();

      var weekdayOffset;
      var altDate;
      var altWeekdayOffset;


      out.IsValidDate=true;
      var curDate;
      var offset;
      var dayName = "Derived";
      var monthName = "Derived";
      var yearName = "Derived";
    </tag>
    <one-of>
      <item>
        <item repeat="0-1">le</item>
        <ruleref uri="#Date_Weekday" />
        <tag>

          offset = rules.Date_Weekday;
          weekdayOffset = GetOffsetFromWeekday(offset, "next");
          altWeekdayOffset = GetOffsetFromWeekday(offset, "previous");

          dayName = "Assumed";
          monthName = "Assumed";
          yearName = "Assumed";
        </tag>
      </item>
      <item>
        <ruleref uri="#Date_Weekday" />
        <item>prochain</item>
        <tag>
          offset = rules.Date_Weekday;
          weekdayOffset = GetOffsetFromWeekday(offset, "next");
          altWeekdayOffset = weekdayOffset + 7;
        </tag>
      </item>
      <item>
        <ruleref uri="#Date_Weekday" />
        <one-of>
          <item>dernier</item>
          <item>passé</item>
        </one-of>
        <tag>
          offset = rules.Date_Weekday;
          weekdayOffset = GetOffsetFromWeekday(offset, "previous");
          altWeekdayOffset = weekdayOffset - 7;
        </tag>
      </item>
    </one-of>
    <tag>

      curDate = GetDateFromOffset(weekdayOffset);
      altDate = GetDateFromOffset(altWeekdayOffset);

      out.Day._value = curDate.getDate();
      out.Day._attributes.name = dayName;
      out.Month._value = curDate.getMonth() + 1;
      out.Month._attributes.name = monthName;
      out.Year._value = curDate.getFullYear();
      out.Year._attributes.name = yearName;
      out.AlternateDay._value = altDate.getDate();
      out.AlternateMonth._value = altDate.getMonth() + 1;
      out.AlternateYear._value = altDate.getFullYear();
      out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
    </tag>
  </rule>

  <!-- Date BASIC rules -->
  <rule id="Date_BasicRules" scope="public">
    <example> vendredi  </example>
    <example> samedi  </example>
    <one-of>
      <item>
        <ruleref uri="#Date_Weekday" />
      </item>
      <item>
        <ruleref uri="#Date_Month" />
      </item>
      <item>
        <ruleref uri="#Date_MonthNum" />
      </item>
      <item>
        <ruleref uri="#Date_DayNum" />
      </item>
    </one-of>
  </rule>

  <!-- out.Date_Weekday._value: integer -->
  <rule id="Date_Weekday" scope="public">
    <example> vendredi  </example>
    <example> samedi  </example>
    <one-of>
      <item>
        dimanche <tag> out = 1 </tag>
      </item>
      <item>
        lundi <tag> out = 2 </tag>
      </item>
      <item>
        mardi <tag> out = 3 </tag>
      </item>
      <item>
        mercredi <tag> out = 4 </tag>
      </item>
      <item>
        jeudi <tag> out = 5 </tag>
      </item>
      <item>
        vendredi <tag> out = 6 </tag>
      </item>
      <item>
        samedi <tag> out = 7 </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Date_Month._value : integer [1...12] -->
  <rule id="Date_Month" scope="public">
    <example> février  </example>
    <example> mars  </example>
    <example> avril  </example>
    <one-of>
      <item>
        janvier <tag> out = 1 </tag>
      </item>
      <item>
        février <tag> out = 2 </tag>
      </item>
      <item>
        mars <tag> out = 3 </tag>
      </item>
      <item>
        avril <tag> out = 4 </tag>
      </item>
      <item>
        mai <tag> out = 5 </tag>
      </item>
      <item>
        juin <tag> out = 6 </tag>
      </item>
      <item>
        juillet <tag> out = 7 </tag>
      </item>
      <item>
        août <tag> out = 8 </tag>
      </item>
      <item>
        septembre <tag> out = 9 </tag>
      </item>
      <item>
        octobre <tag> out = 10 </tag>
      </item>
      <item>
        novembre <tag> out = 11 </tag>
      </item>
      <item>
        décembre <tag> out = 12 </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Date_MonthNum._value: integer -->
  <rule id="Date_MonthNum" scope="public">
    <example> quatre  </example>
    <example> cinq  </example>
    <example> six  </example>
    <one-of>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
        <ruleref uri="#Cardinal_1_to_9" />
        <tag> out = rules.Cardinal_1_to_9; </tag>
      </item>
      <item>
        dix <tag> out = 10; </tag>
      </item>
      <item>
        onze <tag> out = 11; </tag>
      </item>
      <item>
        douze <tag> out = 12; </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Date_DayNum._value: integer -->
  <rule id="Date_DayNum" scope="public">
    <example> zéro trois  </example>
    <example> vingt  </example>
    <one-of>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
        <ruleref uri="#Cardinal_1_to_9" />
        <tag> out = rules.Cardinal_1_to_9; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_19" />
        <tag> out = rules.Cardinal_10_to_19; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_20_to_29" />
        <tag> out = rules.Cardinal_20_to_29; </tag>
      </item>
      <item>
        trente <tag> out = 30; </tag>
      </item>
      <item>
        trente et un <tag> out = 31; </tag>
      </item>
    </one-of>
  </rule>

  <!--Date_Year-->

  <rule id="Date_Year" scope="public">
    <example> deux mille un</example>
    <tag>
      out.Year = new Object();
      var offset = 1;
      out.AlternateYear = new Object();
    </tag>
    <one-of>
      <item>
        <one-of>
          <item>
            mille neuf cent
          </item>
          <item>
            dix-neuf cent
          </item>
        </one-of>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag>
          out.Year._value = 1900 + rules.Cardinal_1_to_99;
          out.Year._attributes.name = "Explicit";
          out.Year._attributes.form = "Long Form";
          out.AlternateYear._value = out.Year._value;
        </tag>
      </item>
      <item>
        deux mille
        <ruleref uri="#Cardinal_1_to_99" />
        <tag>
          out.Year._value = 2000 + rules.Cardinal_1_to_99;
          out.Year._attributes.name = "Explicit";
          out.Year._attributes.form = "Long Form";
          out.AlternateYear._value = out.Year._value;
        </tag>
      </item>
      <item>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_0" />
            <ruleref uri="#Cardinal_1_to_9" />
            <tag>
              offset = rules.Cardinal_1_to_9;
            </tag>
          </item>
          <item>
            <ruleref uri="#Cardinal_10_to_19" />
            <tag>
              offset = rules.Cardinal_10_to_19;
            </tag>
          </item>
          <item>
            <ruleref uri="#Cardinal_20_to_99" />
            <tag>
              offset = rules.Cardinal_20_to_99;
            </tag>
          </item>
        </one-of>
        <tag>
          out.Year._attributes.name = "Derived";
          out.Year._attributes.form = "Short Form";
          if(offset >= 30)
          {
          out.Year._value = 1900 + offset;
          out.AlternateYear._value = 2000 + offset;
          }
          else
          {
          out.Year._value = 2000 + offset;
          out.AlternateYear._value = 1900 + offset;
          }
        </tag>
      </item>
    </one-of>
  </rule>

  <!--Time-->
  <rule id="Time" scope="public">
    <example> dix heures du matin </example>
    <example> midi et demie </example>
    <example> sept heures </example>
    <example> six heures moins cinq </example>
    <example> dix heures et deux minutes </example>
    <example> dix heures moins quart </example>
    <example> quinze heures et quart </example>
    <example> sept heures vingt-cinq du matin </example>
    <example> trois heures et quart </example>
    <example> dix-huit heures vingt </example>
    <tag>
      out.Hour = new Object();
      out.Minute = new Object();
      var offset;
    </tag>
    <one-of>
      <item>
        <ruleref uri="#Time_Hour" />
        <tag>
          out.Hour = rules.Time_Hour.Hour;
          out.Minute._value = 0;
          out.AlternateHour = new Object();
          out.AlternateHour = rules.Time_Hour.AlternateHour;
        </tag>
      </item>
      <item>
        <ruleref uri="#Time_Hour" />
        <tag>
          out.Hour = rules.Time_Hour.Hour;

          out.AlternateHour = new Object();
          out.AlternateHour = rules.Time_Hour.AlternateHour;
        </tag>
        <ruleref uri="#Time_BeforeAfter" />
        <tag>
          offset = rules.Time_BeforeAfter.Hour._value;
          out.Hour._value = Hour24(out.Hour._value + offset,"");
          out.Minute._value = rules.Time_BeforeAfter.Minute._value;
          out.AlternateHour._value = Hour24(out.AlternateHour._value + offset,"");

        </tag>
      </item>
      <item>
        une heure
        <ruleref uri="#Time_Minute" />
        <tag>
          offset = rules.Time_Minute;
          out.Hour._value = Hour24(1, "");
          out.Hour._attributes.name = "Assumed";
          out.Minute._value = offset;

          out.AlternateHour = new Object();
          out.AlternateHour._value = AlternateHour24(1);
        </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum_2_to_11" />
        heures
        <tag>
          offset = rules.Time_HourNum_2_to_11;
          out.Hour._value = Hour24(offset, "");
          out.Hour._attributes.name = "Assumed";
        </tag>
        <ruleref uri="#Time_Minute" />
        <tag>
          out.Minute._value = rules.Time_Minute;

          out.AlternateHour = new Object();
          out.AlternateHour._value = AlternateHour24(offset);
        </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum_13_to_23" />
        heures
        <tag>
          offset = rules.Time_HourNum_13_to_23;
          out.Hour._value = Hour24(offset, "");
          out.Hour._attributes.name = "Explicit";
        </tag>
        <ruleref uri="#Time_Minute" />
        <tag>
          out.Minute._value = rules.Time_Minute;
        </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum_2_to_11" />
        <tag> var offset1 = rules.Time_HourNum_2_to_11; </tag>
        heures
        <ruleref uri="#Time_Minute" />
        <tag>
          offset = rules.Time_Minute;
        </tag>
        <ruleref uri="#Time_AmPm" />
        <tag>
          out.Hour._value = Hour24(offset1, rules.Time_AmPm);
          out.Hour._attributes.name = "Explicit";
          out.Minute._value = offset;
        </tag>
      </item>
      <item>
        midi
        <tag>
          out.Hour._value = 12;
          out.Hour._attributes.name = "Explicit";
          out.Minute._value = 0;
        </tag>
      </item>
      <item>
        midi
        <ruleref uri="#Time_BeforeAfter" />
        <tag>
          offset = rules.Time_BeforeAfter.Hour._value;
          var offsets = rules.Time_BeforeAfter.Minute._value;
          out.Hour._value = 12;
          out.Hour._attributes.name = "Explicit";
          out.Minute._value = offsets;
        </tag>
      </item>
      <item>
        minuit
        <tag>
          out.Hour._value = 0;
          out.Hour._attributes.name = "Explicit";
          out.Minute._value = 0;

        </tag>
      </item>
      <item>
        minuit
        <ruleref uri="#Time_BeforeAfter" />
        <tag>

          offset = rules.Time_BeforeAfter.Hour._value;
          if(offset == 0)
          {
          out.Hour._value = 0;
          }
          else
          {
          out.Hour._value = 23;
          }
          out.Hour._attributes.name = "Explicit";
          out.Minute._value = rules.Time_BeforeAfter.Minute._value;
        </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Time_Hour.Hour: Hour -->
  <rule id="Time_Hour" scope="public">
    <example>une heure </example>
    <tag>
      out.Hour = new Object();
      out.AlternateHour = new Object();
      var offset;
    </tag>
    <one-of>
      <item>
        une heure
        <tag>
          out.Hour._value = Hour24(1, "");
          out.Hour._attributes.name = "Assumed";
          out.AlternateHour._value = AlternateHour24(1);
        </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum_2_to_11" />
        heures
        <tag>
          offset = rules.Time_HourNum_2_to_11;
          out.Hour._value = Hour24(offset, "");
          out.Hour._attributes.name = "Assumed";
          out.AlternateHour._value = AlternateHour24(offset);
        </tag>
      </item>
      <item>
        une heure
        <ruleref uri="#Time_AmPm" />
        <tag>
          out.Hour._value = Hour24(1, rules.Time_AmPm);
          out.Hour._attributes.name = "Explicit";
          out.AlternateHour._value = out.Hour._value;
        </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum_2_to_11" />
        <tag> offset = rules.Time_HourNum_2_to_11; </tag>
        heures
        <ruleref uri="#Time_AmPm" /><tag>
          out.Hour._value = Hour24(offset, rules.Time_AmPm);
          out.Hour._attributes.name = "Explicit";
          out.AlternateHour._value = out.Hour._value;
        </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum_13_to_23" />
        heures
        <tag>
          offset = rules.Time_HourNum_13_to_23;
          out.Hour._value = Hour24(offset, "");
          out.Hour._attributes.name = "Explicit";
          out.AlternateHour._value = AlternateHour24(offset);
        </tag>
      </item>
    </one-of>
  </rule>
  <!-- out.Time_HourNum_2_to_11._value: integer -->
  <rule id="Time_HourNum_2_to_11" scope="public">
    <example> six  </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
        <tag> out = rules.Cardinal_2_to_9;</tag>
      </item>
      <item>
        dix <tag> out = 10 </tag>
      </item>
      <item>
        onze <tag> out = 11 </tag>
      </item>
    </one-of>
  </rule>

  <!-- out.Time_HourNum_13_to_23._value: integer -->
  <rule id="Time_HourNum_13_to_23" scope="public">
    <example> quinze  </example>
    <one-of>
      <item>
        treize <tag> out = 13 </tag>
      </item>
      <item>
        quatorze <tag> out = 14 </tag>
      </item>
      <item>
        quinze <tag> out = 15 </tag>
      </item>
      <item>
        seize <tag> out = 16 </tag>
      </item>
      <item>
        dix-sept <tag> out = 17 </tag>
      </item>
      <item>
        dix-huit <tag> out = 18 </tag>
      </item>
      <item>
        dix-neuf <tag> out = 19 </tag>
      </item>
      <item>
        vingt <tag> out = 20 </tag>
      </item>
      <item>
        vingt et une <tag> out = 21 </tag>
      </item>
      <item>
        vingt-deux <tag> out = 22 </tag>
      </item>
      <item>
        vingt-trois <tag> out = 23 </tag>
      </item>
    </one-of>
  </rule>

  <!--
  out.Time_BeforeAfter
  -->
  <rule id="Time_BeforeAfter" scope="public">
    <example>et quart </example>
    <tag>var offset; out.Hour = new Object(); out.Minute = new Object();</tag>
    <one-of>
      <item>
        et quart
        <tag>   out.Minute._value = 15; out.Hour._value = 0;</tag>
      </item>
      <item>
        moins <item repeat="0-1"> le </item> quart
        <tag>   out.Minute._value = 45; out.Hour._value = -1;</tag>
      </item>
      <item>
        et demie
        <tag>   out.Minute._value = 30; out.Hour._value = 0;</tag>
      </item>
      <item>
        moins  <ruleref uri="#Time_Minute" />
        <tag>   out.Minute._value = 60-rules.Time_Minute._value; out.Hour._value = -1;</tag>
      </item>
      <item>
        <item repeat="0-1"> et </item>  <ruleref uri="#Time_Minute" /> minutes
        <tag>   out.Minute._value = rules.Time_Minute._value; out.Hour._value = 0;</tag>
      </item>

      <item>
        <ruleref uri="#Time_Minute" />
        <item repeat="0-1"> minutes </item>
        <tag>   out.Minute._value = rules.Time_Minute._value; out.Hour._value = 0;</tag>
      </item>
    </one-of>
  </rule>

  <!--Time_One_Minute-->
  <rule id="Time_One_Minute" scope="public">
    <example> une minute</example>
    <item>
      une
      <item repeat="0-1">
        minute
      </item>
      <tag> out = 1;</tag>
    </item>
  </rule>

  <!-- out.Time_Minute._value: integer -->
  <rule id="Time_Minute" scope="public">
    <example> sept </example>
    <example> vingt-trois </example>
    <one-of>
      <item>
        <ruleref uri="#Time_One_Minute" />
      </item>
      <item>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_2_to_9" />
          </item>
          <item>
            <ruleref uri="#Cardinal_10_to_19" />
          </item>
          <item>
            <ruleref uri="#Cardinal_20_to_29" />
          </item>
          <item>
            <ruleref uri="#Cardinal_30_to_39" />
          </item>
          <item>
            <ruleref uri="#Cardinal_40_to_49" />
          </item>
          <item>
            <ruleref uri="#Cardinal_50_to_59" />
          </item>
        </one-of>
        <item repeat="0-1">
          minutes
        </item>
      </item>
    </one-of>
  </rule>

  <!-- out.Time_AmPm._value: string -->
  <rule id="Time_AmPm" scope="public">
    <example> du soir  </example>
    <tag> out._value = "";</tag>
    <one-of>
      <item>
        du matin <tag> out._value = "AM";</tag>
      </item>
      <item>
        de l'après-midi <tag> out._value = "PM";</tag>
      </item>
      <item>
        du soir <tag> out._value = "PM";</tag>
      </item>
    </one-of>
  </rule>

  <!-- out.PhoneNumber -->
  <rule id="PhoneNumber" scope="public">
    <example> zéro sept zéro zéro trente-six sept trois trente-six</example>
    <tag> out._value = ""; </tag>
    <item>
      <ruleref uri="#PhoneNumber_AreaCode" />
      <tag>
        out._value += rules.PhoneNumber_AreaCode._value;
      </tag>
      <ruleref uri="#PhoneNumber_LocalNumber" />
      <tag>
        out._value += rules.PhoneNumber_LocalNumber._value;
      </tag>
    </item>
  </rule>

  <!-- out.PhoneNumber_AreaCode._value: string [2 characters] -->
  <rule id="PhoneNumber_AreaCode" scope="public">
    <example> zero trois </example>
    <example> zero six </example>
    <tag> out._value = ""; </tag>
    <item>
      <ruleref uri="#Cardinal_0" />
      <tag> out._value += rules.Cardinal_0; </tag>
      <ruleref uri="#PHONE_TAG_Cardinal_0_to_9" />
      <tag> out._value += rules.PHONE_TAG_Cardinal_0_to_9; </tag>
    </item>
  </rule>

  <!-- out.PhoneNumber_LocalNumber._value: string  -->
  <rule id="PhoneNumber_LocalNumber" scope="public">
    <example> zéro zéro sept trois trente-six trente-six </example>
    <tag> out._value = "";</tag>
    <one-of>
      <item>
        <ruleref uri="#PHONE_TAG_DigitBlock_2Digits" />
        <tag> out._value += rules.PHONE_TAG_DigitBlock_2Digits._value; </tag>
        <ruleref uri="#PHONE_TAG_DigitBlock_2Digits" />
        <tag> out._value += rules.PHONE_TAG_DigitBlock_2Digits._value; </tag>
        <ruleref uri="#PHONE_TAG_DigitBlock_2Digits" />
        <tag> out._value += rules.PHONE_TAG_DigitBlock_2Digits._value; </tag>
        <ruleref uri="#PHONE_TAG_DigitBlock_2Digits" />
        <tag> out._value += rules.PHONE_TAG_DigitBlock_2Digits._value;  </tag>
      </item>
    </one-of>

  </rule>
</grammar>
